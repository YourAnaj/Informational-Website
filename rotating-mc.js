document.addEventListener('DOMContentLoaded', function() {
    const quizForm = document.getElementById('introductionmc'); // Keep this ID
    const resultDiv = document.getElementById('result');
    const backButton = document.getElementById('backButton');
    const quizContainer = document.querySelector('.quiz-container');
    const allQuestions = [
        {
            question: "What is the formula for the peak EMF generated by a coil rotating in a magnetic field?",
            options: ["EMF = ω / (N × A × B)", "EMF = N + A + B", "EMF = N × B × A × ω", "EMF = B / (N × A)"],
            answer: "EMF = N × B × A × ω"
        },
        {
            question: "In the formula EMF = NBAω, what does the symbol ω represent?",
            options: ["Area of the coil", "Resistance of the wire", "Magnetic field strength", "Angular velocity of rotation"],
            answer: "Angular velocity of rotation"
        },
        {
            question: "How is angular velocity (ω) calculated for a rotating coil?",
            options: ["ω = B × A", "ω = EMF / NBA", "ω = 2π × f", "ω = f / 2π"],
            answer: "ω = 2π × f"
        },
        {
            question: "If the frequency of a rotating coil increases, what happens to the peak EMF?",
            options: ["It becomes zero", "It increases", "It stays the same", "It decreases"],
            answer: "It increases"
        },
        {
            question: "Which of the following would not increase the peak EMF generated in a rotating coil?",
            options: ["Increasing the magnetic field strength", "Decreasing the area of the coil", "Increasing the frequency of rotation", "Increasing the number of turns"],
            answer: "Decreasing the area of the coil"
        },
        {
            question: "In the formula EMFpeak = NBAω, what does 'A' represent?",
            options: ["The number of turns in the coil.", "The angular velocity of the coil.", "The magnetic field strength.", "The area of the coil."],
            answer: "The area of the coil."
        },
        {
            question: "In the formula EMFpeak = NBAω, what does 'ω' (omega) represent?",
            options: ["The period of rotation in seconds.", "The frequency of rotation in Hertz.", "The total magnetic flux through the coil.", "The angular velocity of the coil in radians per second."],
            answer: "The angular velocity of the coil in radians per second."
        },
        {
            question: "The rate at which the coil completes its rotations per second is known as the:",
            options: ["Angular velocity.", "Wavelength.", "Frequency.", "Period."],
            answer: "Frequency."
        },
        {
            question: "The unit of frequency (f) in the context of a rotating coil is:",
            options: ["Radian per second (rad/s)", "Tesla (T)", "Weber (Wb)", "Hertz (Hz)"],
            answer: "Hertz (Hz)"
        },
        {
            question: "To calculate the angular velocity (ω) from the frequency (f), you use the formula:",
            options: ["ω = f²", "ω = π * f", "ω = 2π * f", "ω = f / (2π)"],
            answer: "ω = 2π * f"
        }
    ];
    const numQuestionsToShow = 5;
    let currentQuestionsIndices = [];
    let currentQuestions = [];
    const userAnswers = {};
    let quizSubmitted = false; // Flag to track submission

    function getRandomQuestions() {
        const indices = [];
        while (indices.length < numQuestionsToShow && indices.length < allQuestions.length) {
            const randomIndex = Math.floor(Math.random() * allQuestions.length);
            if (!indices.includes(randomIndex)) {
                indices.push(randomIndex);
            }
        }
        currentQuestionsIndices = indices;
        currentQuestions = currentQuestionsIndices.map(index => allQuestions[index]);
    }

    function displayQuestions() {
        quizForm.innerHTML = '';
        currentQuestions.forEach((q, index) => {
            const questionDiv = document.createElement('div');
            questionDiv.classList.add('question');

            const questionNumber = document.createElement('p');
            questionNumber.textContent = `${index + 1}. ${q.question}`;
            questionDiv.appendChild(questionNumber);

            const optionsDiv = document.createElement('div');
            optionsDiv.classList.add('options');
            q.options.forEach(option => {
                const label = document.createElement('label');
                const input = document.createElement('input');
                input.type = 'radio';
                input.name = `q${index}`;
                input.value = option;
                input.addEventListener('change', () => {
                    if (!quizSubmitted) {
                        userAnswers[`q${index}`] = option;
                    }
                });
                label.appendChild(input);
                label.appendChild(document.createTextNode(` ${option}`));
                optionsDiv.appendChild(label);
            });
            questionDiv.appendChild(optionsDiv);
            quizForm.appendChild(questionDiv);
        });

        const submitButton = document.createElement('button');
        submitButton.type = 'submit';
        submitButton.classList.add('btn');
        submitButton.textContent = 'Submit Answers'; // Changed button text
        quizForm.appendChild(submitButton);
    }

    getRandomQuestions();
    displayQuestions();

    quizForm.addEventListener('submit', function(event) {
        event.preventDefault();

        if (quizSubmitted) {
            alert('You have already submitted the quiz and reviewed the answers.');
            return;
        }

        let allAnswered = true;
        for (let i = 0; i < currentQuestions.length; i++) {
            if (!userAnswers[`q${i}`]) {
                allAnswered = false;
                break;
            }
        }

        if (!allAnswered) {
            alert('Please answer all questions before submitting.');
            return;
        }

        let score = 0;
        currentQuestions.forEach((q, index) => {
            if (userAnswers[`q${index}`] === q.answer) {
                score++;
            }
        });

        const percentage = (score / currentQuestions.length) * 100;
        const scoreMessage = `You scored ${score} out of ${currentQuestions.length} (${percentage.toFixed(0)}%)`;

        const popupContainer = document.createElement('div');
        popupContainer.classList.add('score-popup');

        const scoreElement = document.createElement('p');
        scoreElement.textContent = scoreMessage;

        const backButtonPopup = document.createElement('button');
        backButtonPopup.textContent = 'Back to Quiz & Assessment List'; // Changed button text
        backButtonPopup.classList.add('back-button');
        backButtonPopup.addEventListener('click', () => {
            window.location.href = 'quiz.html';
        });

        const reviewButtonPopup = document.createElement('button');
        reviewButtonPopup.textContent = 'Review Answers';
        reviewButtonPopup.classList.add('review-button');
        reviewButtonPopup.addEventListener('click', () => {
            popupContainer.remove();
            revealAnswers();
            disableOptions(); // Disable options after review
            quizSubmitted = true;
        });

        popupContainer.appendChild(scoreElement);
        popupContainer.appendChild(reviewButtonPopup);
        popupContainer.appendChild(backButtonPopup); // Rearranged button order

        quizContainer.appendChild(popupContainer);

        if (resultDiv) resultDiv.textContent = '';
        if (backButton) backButton.style.display = 'none';
    });

    function revealAnswers() {
        currentQuestions.forEach((q, index) => {
            const options = document.querySelectorAll(`input[name="q${index}"]`);
            options.forEach(option => {
                const label = option.parentNode;
                label.classList.remove('correct-answer', 'incorrect-answer');
                if (option.value === q.answer) {
                    label.classList.add('correct-answer');
                } else if (userAnswers[`q${index}`] === option.value && option.value !== q.answer) {
                    label.classList.add('incorrect-answer');
                }
                const input = label.querySelector('input[type="radio"]');
                if (input) {
                    input.disabled = true;
                }
            });
        });
        if (backButton) backButton.style.display = 'block';
    }

    function disableOptions() {
        const radioButtons = quizForm.querySelectorAll('input[type="radio"]');
        radioButtons.forEach(radio => {
            radio.disabled = true;
        });
        const labels = quizForm.querySelectorAll('.options label');
        labels.forEach(label => {
            label.style.cursor = 'default';
        });
    }

    backButton.addEventListener('click', function() {
        window.location.href = 'quiz.html';
    });
});
